(self.webpackChunktao=self.webpackChunktao||[]).push([[4334],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(r),d=i,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(h,l(l({ref:t},p),{},{components:r})):n.createElement(h,l({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},328:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var n=r(2122),i=r(9756),a=(r(7294),r(3905)),l=["components"],o={sidebar_position:3},s="ripgrep",c={unversionedId:"unix/ripgrep",id:"unix/ripgrep",isDocsHomePage:!1,title:"ripgrep",description:"ripgrep is a very fast grep-like tool based on Rust language.",source:"@site/docs/unix/ripgrep.md",sourceDirName:"unix",slug:"/unix/ripgrep",permalink:"/tao/docs/unix/ripgrep",editUrl:"https://github.com/johntday/tao/edit/master/docs/unix/ripgrep.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"GNU grep",permalink:"/tao/docs/unix/ggrep"},next:{title:"sed",permalink:"/tao/docs/unix/sed"}},p=[{value:"Installing ripgrep on MacOS",id:"installing-ripgrep-on-macos",children:[]},{value:"Recursive Search",id:"recursive-search",children:[]},{value:"Not matching",id:"not-matching",children:[]},{value:"Just return matching file-paths",id:"just-return-matching-file-paths",children:[]},{value:"Case-insensitive",id:"case-insensitive",children:[]},{value:"Return file-paths without a match",id:"return-file-paths-without-a-match",children:[]},{value:"Find Fixed Strings",id:"find-fixed-strings",children:[]},{value:"Show context around match",id:"show-context-around-match",children:[]},{value:"Using Glob to only search for specific file names",id:"using-glob-to-only-search-for-specific-file-names",children:[]},{value:"List files like find command",id:"list-files-like-find-command",children:[]},{value:"Other",id:"other",children:[]},{value:"References",id:"references",children:[]}],u={toc:p};function m(e){var t=e.components,r=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ripgrep"},"ripgrep"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"ripgrep")," is a very fast ",(0,a.kt)("em",{parentName:"p"},"grep"),"-like tool based on ",(0,a.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/"},"Rust language"),"."),(0,a.kt)("h2",{id:"installing-ripgrep-on-macos"},"Installing ripgrep on MacOS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"brew install ripgrep\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/tao/docs/mac/homebrew"},"homebrew")),(0,a.kt)("h2",{id:"recursive-search"},"Recursive Search"),(0,a.kt)("p",null,"By default, ",(0,a.kt)("em",{parentName:"p"},"ripgrep")," supports recursive search."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# find all matches recursively in current directory for 'regex'\nrg 'regex' \n")),(0,a.kt)("h2",{id:"not-matching"},"Not matching"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# find all lines that do not match in file for 'regex'\nrg -v 'regex' file\n")),(0,a.kt)("h2",{id:"just-return-matching-file-paths"},"Just return matching file-paths"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# find all matches file-paths recursively in current directory for 'regex'\nrg -l 'regex'\n")),(0,a.kt)("h2",{id:"case-insensitive"},"Case-insensitive"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"rg -i 'regex'\n")),(0,a.kt)("h2",{id:"return-file-paths-without-a-match"},"Return file-paths without a match"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# find all matches file-paths recursively in current directory for 'regex'\nrg --files-without-match 'regex'\n")),(0,a.kt)("h2",{id:"find-fixed-strings"},"Find Fixed Strings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# find all matches file-paths recursively in current directory for 'fixed string'\nrg -F 'fixed string'\n")),(0,a.kt)("h2",{id:"show-context-around-match"},"Show context around match"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# find all matches file-paths recursively in current directory for 'regex'\n# show 2 lines before and after match\nrg 'regex' -C 2\n\n# show 1 line before and 2 lines after match\nrg 'regex' -B 1 -A 2\n")),(0,a.kt)("h2",{id:"using-glob-to-only-search-for-specific-file-names"},"Using Glob to only search for specific file names"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# find all matches file-paths recursively in current directory for 'regex'\n# only search for files named '*-items.xml'\nrg -g '*-items.xml' 'regex'\n")),(0,a.kt)("h2",{id:"list-files-like-find-command"},"List files like find command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# find all file-paths recursively named 'readme*.txt' in directory '~/Documents'\nrg --files ~/Documents/ -g 'readme*.txt'\n")),(0,a.kt)("h2",{id:"other"},"Other"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Supports PCRE2 with ",(0,a.kt)("inlineCode",{parentName:"li"},"-P")," option."),(0,a.kt)("li",{parentName:"ul"},"Multiline",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-U")," match across multiline"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--multiline-dotall")," dot can match newline char"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--hidden")," search hidden files and directories"),(0,a.kt)("li",{parentName:"ul"},"Counting matches",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-c")," return count of matching files"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--count-matches")," return list of files and match count"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-o")," only print matches - not entire line"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-mN")," only print first ",(0,a.kt)("em",{parentName:"li"},"N")," number of matching lines per file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-z")," search in compressed files"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-I")," do not print file-path")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"man rg")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rg -h")," short descriptions"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rg --help")," long descriptions"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/BurntSushi/ripgrep"},"GitHub repo for ripgrep"))))}m.isMDXComponent=!0}}]);